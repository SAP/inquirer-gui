version: 2.1 # use CircleCI 2.1

default-test: &default-test
  working_directory: ~/repo
  steps:
    - checkout
    - run: npm install
    - run: npm run build
    - run: npm test

defaults: &defaults
  docker:
    - image: cimg/node:14.19
  working_directory: ~/repo

jobs: # a collection of steps
  test-node16:
    docker:
      - image: cimg/node:16.19 # Current BAS node version
    <<: *default-test

  compliance:
    docker:
      - image: cimg/python:3.10.0
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: compliance check
          command: |
            pip3 install --user reuse
            ~/.local/bin/reuse lint
  build-and-test:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install dependencies
          command: npm install
      - run:
          name: build
          command: npm run build
      - run:
          name: run tests
          command: npm test
      - run:
          name: coverall
          command: cat ./coverage/lcov.info | ./node_modules/.bin/coveralls
          environment:
            COVERALLS_SERVICE_NAME: circle-ci
            COVERALLS_GIT_BRANCH: ${CIRCLE_BRANCH}
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint      
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - store_artifacts:
          path: coverage
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: build for publish
          command: npm run build
      - run:
          name: authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: publish package
          command: npm publish

workflows:
  version: 2
  test-publish:
    jobs:
      - test-node16
      - compliance
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - publish:
          context: npm
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
